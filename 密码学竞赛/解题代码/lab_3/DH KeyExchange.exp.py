import gmpy2
from hashlib import md5
import binascii
from Crypto.Util.number import *
def de(c, e, n):
    k = 0
    while True:
        m = c + n*k
        result, flag = gmpy2.iroot(m, e)
        if True == flag:
            return result
        k += 1

msg='f617c262caeedbd56414f6139fac7f06f34f8e3188beda9b6447fe4683b77c06f21f9b3386bdd98f3a0c'
error= 881681761739253172442857772706225151330302746756586376489925268091943264184425115085109100481393835444629535158137657368421836016339462893873981179504356604075768328761251143390945228646306818703037519765856937879989864912514135097
p= 97071379036763365276185060009702438018060059206856674743686874316909319386927170094660286716995216225373017802186869259889328302258006874632267104922050738616270850048994498858195057639097114128036711175249438326521973436665358263778045161400707411132034853950961056374856163762269172994421007395785387103059
gb= 45971390223134075344933513264200628545702021313421202505710767209011084323131658270189445129369819992415170177788095881251796634672207375557418454489405801076356688074720248960577614548687530706591105879363287594643654495109209030376168385946422997485036113104259478539895821959224109446656561538368805688456
a=de(error,3,p)
#print(a)
dhk=pow(gb,a,p)
#print(dhk)
m=int(msg,16)
m=m.to_bytes(42,byteorder='big')
key=md5(long_to_bytes(dhk)).digest()
m=bytearray(m)
for i in range(len(m)):
    m[i]^=key[i%len(key)]
print('encrypt(msg)=',bytes(m))

