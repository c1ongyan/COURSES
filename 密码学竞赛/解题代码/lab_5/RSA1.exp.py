import gmpy2
import libnum
from Crypto.Util.number import long_to_bytes
n = 16196079106239019794825803874830148626391287349752467571931063163667630108420657149744958605211737690821933273076489009374983977437916923997391102723479097915826123852802313964910705065470009283251372446932088849229015689673331396481523840881080095885851056603506749200875216167852672682038071931093724911689019440183773008068106129988269480207435106550913781798265752382025456708033581753626725268372329385161772764367584874134009617152375346731582955664042178470881492799309437296105939876570106120432637678685047091855802773294995169170244767696176975202975928177117691007909996149813141388323474611638111946746301
c = 1216120554199505011041092604193222589304405981631306060268228255741904418354218321926272499023748831772592670003366777920187210007443889838457982220982525206344750379590685919129790070655266942380952309154534034084553335826592208745331544346875815120923329583014717960917452532491127658998354559456529046394409701750176180175014932651264181615572009780826809770833187267823172695157700232558200827046804039438351111009195375222165329650646987622640748915434630398047697688244904536207063418765844815948759066391732727015196943811568502509453383173748919195830390780354003994403079297566327918579927382627465408849680
e = 0x10001
p=gmpy2.gcd(n,c)
q=n//p

phi = (q-1) * (p-1)
d = gmpy2.invert(e,phi)
M = pow(c,d,n)
m=M//2022//p//1201
print(long_to_bytes(m))
